 Легковес — это структурный паттерн проектирования, который позволяет вместить бóльшее количество
 объектов в отведённую оперативную память. Легковес экономит память, разделяя общее состояние
 объектов между собой, вместо хранения одинаковых данных в каждом объекте.

===================================================================
 Применимость:
 Когда не хватает оперативной памяти для поддержки всех нужных объектов.

 Эффективность паттерна Легковес во многом зависит от того, как и где он используется.
 Применяйте этот паттерн, когда выполнены все перечисленные условия:

 - В приложении используется большое число объектов;
 - Из-за этого высоки расходы оперативной памяти;
 - Большую часть состояния объектов можно вынести за пределы их классов;
 - Большие группы объектов можно заменить относительно небольшим количеством

===================================================================
 Преимущества
 Экономит оперативную память.

 Недостатки
 Расходует процессорное время на поиск/вычисление контекста.
 Усложняет код программы из-за введения множества дополнительных классов.

===================================================================
 Отношения с другими паттернами
 Компоновщик часто совмещают с Легковесом, чтобы реализовать общие ветки дерева и сэкономить при этом память.

 Легковес показывает, как создавать много мелких объектов, а Фасад показывает,
 как создать один объект, который отображает целую подсистему.

 Паттерн Легковес может напоминать Одиночку, если для конкретной задачи у вас получилось
 свести количество объектов к одному. Но помните, что между паттернами есть два кардинальных отличия:

 В отличие от Одиночки, вы можете иметь множество объектов-легковесов.
 Объекты-легковесы должны быть неизменяемыми, тогда как объект-одиночка допускает изменение своего состояния.